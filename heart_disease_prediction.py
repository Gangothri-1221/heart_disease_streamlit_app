# -*- coding: utf-8 -*-
"""Heart Disease Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WVRYM9VlchjAA0hbNnNMXFOr32TdGQ0g

Importing the Dependencies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection and Processing"""

#importing the csv data to a pandas DataFrame
heart_data=pd.read_csv('data.csv')

#print first five rows of the dataset
heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()

"""1-defective heart
0-healthy heart
"""

X=heart_data.drop(columns='target',axis=1)
Y=heart_data['target']

print(X)

print(Y)

"""

1.   spliting the data into training data & test data

"""

X_train, X_test, Y_train, Y_test=train_test_split(X,Y,test_size=0.2, stratify=Y,random_state=2)

print(X.shape,X_train.shape, X_test.shape)

model=LogisticRegression()

model.fit(X_train, Y_train)

X_train_prediction=model.predict(X_train)
training_data_accuracy= accuracy_score(X_train_prediction, Y_train)
print("Accuracy on Training data:",training_data_accuracy)

X_test_prediction=model.predict(X_test)
test_data_accuracy= accuracy_score(X_test_prediction, Y_test)
print("Accuracy on Test data:",test_data_accuracy )

input_data=(62,0,0,138,294,1,1,106,0,1.9,1,3,2)

input_data_as_numpy_array=np.asarray(input_data)

input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]== 0):
  print('The Person does not have a Heart Disease')
else:
  print('The Person has Heart Disease')

import pickle

# Replace `model` with your actual model name from the notebook
pickle.dump(model, open('heart_model.pkl', 'wb'))

